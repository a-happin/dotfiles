abbrevs:
  # normal abbreviation
  - abbr: 'q'
    replace-self: 'exit'

  - abbr: 'g'
    replace-self: 'git'

  - abbr: 'push'
    replace-self: 'git push'

  - abbr: 'pushu'
    replace-self: 'git push -u origin HEAD'

  - abbr: 'commit'
    replace-self: 'git commit -v'

  - abbr: 'e'
    replace-self: '${EDITOR}'
    evaluate: true

  - abbr: 'la'
    replace-self: 'ls -lah'

  - abbr: 'll'
    replace-self: 'ls -lah'

  - abbr: 'clone'
    replace-self: 'git clone --depth 1 --recurse-submodules --shallow-submodules'

  - abbr: '['
    replace-self: '[[ 🐣 ]]'
    cursor: '🐣'

  - abbr: '[['
    replace-self: '[[ 🐣 ]]'
    cursor: '🐣'

  # add default options
  - abbr: 'exa'
    append: '-lah'

  - abbr: 'cp'
    append: '-iv'

  - abbr: 'mv'
    append: '-iv'

  - abbr: 'rm'
    append: '-iv'

  - abbr: 'rr'
    replace-self: 'rmdir'

  - abbr: 'rrf'
    replace-self: 'rm -rf'

  - abbr: 'ln'
    append: '-snfv FILE LINK'

  - abbr: 'rmlink'
    replace-self: 'unlink'

  - abbr: 'mkdir'
    append: '-p'

  - abbr: 'df'
    append: '-h'

  - abbr: 'du'
    append: '-h --max-depth 1'

  - abbr: 'fd'
    append: '--hidden --no-ignore --exclude .git'

  - abbr: 'rg'
    append: "--hidden --no-ignore --glob '!.git'"

  - abbr: 'rsync'
    append: "-avh --progress --delete --dry-run SRC_DIR/ DEST_DIR # Be careful with '/' at the end."

  - abbr: 'paccache'
    replace-self: "paccache -r; paccache -ruk0; yay --aur -Sc"

  - abbr: 'g++'
    append: '-std=c++2b -Wall -Wextra -pedantic-errors -I./include -O2 -pipe'

  - abbr: 'clang++'
    append: '-std=c++2b -Weverything -Wno-c++98-compat-pedantic -Wno-c11-extensions -pedantic-errors -I./include -O2 -pipe'

  # zsh
  - abbr: 'type'
    append: '-as'

  - abbr: 'historygrep'
    replace-self: 'history | grep'

  - abbr: 'historyedit'
    replace-self: '${EDITOR} ${HISTFILE}'
    evaluate: true

  # fix typo
  - abbr: ':q'
    replace-self: 'exit'

  - abbr: 'vscode'
    replace-self: 'code'

  - abbr: 'exho'
    replace-self: 'echo'

  # fix options
  - context: 'rm -iv'
    abbr-suffix: ''
    replace-context: rm $([[ -d $1 ]] && printf '%s' '-riv' || printf '%s' '-iv')
    evaluate: true

  # prepend sudo
  - abbr: 'pacman'
    prepend: 'sudo'

  - abbr: 'apt'
    prepend: 'sudo'

  # prepend cd
  - abbr: '..'
    prepend: 'cd'


  # subcommand
  - context: 'git'
    abbr: 'b'
    replace-self: 'branch'

  - context: 'git'
    abbr: 'c'
    replace-self: 'commit'

  - context: 'git'
    abbr: 't'
    replace-self: 'tree -10'

  - context: 'git'
    abbr: 'cv'
    replace-self: 'commit -v'

  - context: 'git'
    abbr: 'cm'
    replace-self: 'commit -m'

  - context: 'git'
    abbr: 'co'
    replace-self: 'checkout'

  - context: 'git'
    abbr: 'pu'
    replace-self: 'push -u origin HEAD'

  - context: 'git'
    abbr: 'pr'
    replace-self: 'pull --rebase origin $(git symbolic-ref --short HEAD)'
    evaluate: true

  - context: 'git'
    abbr: 'a'
    replace-self: 'add --patch'

  - context: 'git'
    abbr: 'aa'
    replace-self: 'add -v --all'

  - context: 'git'
    abbr: 's'
    replace-self: 'stash list && git status'

  - context: 'git'
    abbr: 'd'
    replace-self: 'diff'

  - context: 'git'
    abbr: 'f'
    replace-self: 'fetch --prune'

  - context: 'git'
    abbr: 'amend'
    replace-self: 'commit --amend'

  - context: 'git'
    abbr: 'touch'
    replace-self: 'commit --amend --date=now --no-edit'

  - context: 'git'
    abbr: 'new'
    replace-self: 'switch -c'

  - context: 'git'
    abbr: 'hash'
    replace-self: 'rev-parse HEAD'

  - context: 'git'
    abbr: 'discard'
    replace-self: 'reset --hard HEAD'

  - context: 'git'
    abbr: 'clean'
    append: '-df'

  - context: 'git'
    abbr: 'init'
    replace-self: 'init && git commit --allow-empty -m "Initial commit."'

  - context: 'git'
    abbr: 'sw'
    replace-self: 'switch $(fzf-git-branch)'
    evaluate: true

  - context: 'git'
    abbr: 'fomm'
    replace-self: fetch origin $(local b=$(fzf-git-branch); printf '%s:%s' "$b" "$b")
    evaluate: true
    redraw: true

  - context: 'git'
    abbr: 'fixup'
    replace-self: commit --fixup $(fzf-git-commit)
    evaluate: true
    redraw: true

  - context: 'git'
    abbr: 'pick'
    replace-self: cherry-pick $(fzf-git-commit)
    evaluate: true
    redraw: true

  - context: 'git rebase'
    abbr: '-i'
    replace-self: -i $(fzf-git-commit)
    evaluate: true
    redraw: true

  - context: 'git push'
    abbr: '-f'
    replace-self: --force-with-lease
    global: true

  # external command
  - context: 'git'
    abbr: 'destroy'
    replace-all: 'rm -rf .git'

  - context: 'git'
    abbr: 'rg'
    replace-all: "rg --hidden --glob '!.git'"

  # global abbreviation
  - context: 'git'
    abbr: 'B'
    global: true
    replace-self: $(fzf-git-branch)
    evaluate: true
    redraw: true

  - context: 'git'
    abbr: 'C'
    global: true
    replace-self: $(fzf-git-commit)
    evaluate: true
    redraw: true

  - context: 'zabbrev'
    abbr: 'update'
    replace-all: ' cargo uninstall zabbrev; cargo install --path ~/work/zabbrev'

  # fake command
  - context: 'compile'
    abbr-suffix: '.cpp'
    replace-first: 'chino'

  # extract
  - context: 'extract'
    abbr-suffix: '.tar.bz2'
    replace-first: 'tar -jxvf'

  - context: 'extract'
    abbr-suffix: '.tar.gz'
    replace-first: 'tar -zxvf'

  - context: 'extract'
    abbr-suffix: '.tar.xz'
    replace-first: 'tar -Jxvf'

  - context: 'extract'
    abbr-suffix: '.tbz2'
    replace-first: 'tar -jxvf'

  - context: 'extract'
    abbr-suffix: '.tgz'
    replace-first: 'tar -zxvf'

  - context: 'extract'
    abbr-suffix: '.tar'
    replace-first: 'tar -xvf'

  - context: 'extract'
    abbr-suffix: '.bz2'
    replace-first: 'bzip2 -dc'

  - context: 'extract'
    abbr-suffix: '.zip'
    replace-first: 'unzip'

  - context: 'extract'
    abbr-suffix: '.rar'
    replace-first: 'unrar x'

  - context: 'extract'
    abbr-suffix: '.gz'
    replace-first: 'gzip -dc'

  - context: 'extract'
    abbr-suffix: '.xz'
    replace-first: 'xz -d'

  - context: 'compress'
    abbr-suffix: '.tar.bz2'
    replace-first: 'tar -jcvf'

  # compress
  - context: 'compress'
    abbr-suffix: '.tar.gz'
    replace-first: 'tar -zcvf'

  - context: 'compress'
    abbr-suffix: '.tar.xz'
    replace-first: 'tar -Jcvf'

  - context: 'compress'
    abbr-suffix: '.tbz2'
    replace-first: 'tar -jcvf'

  - context: 'compress'
    abbr-suffix: '.tgz'
    replace-first: 'tar -zcvf'

  - context: 'compress'
    abbr-suffix: '.tar'
    replace-first: 'tar -cvf'

  - context: 'compress'
    abbr-suffix: '.zip'
    replace-first: 'zip -r'

  - context: 'compress'
    abbr-suffix: '.rar'
    replace-first: 'rar a'

  # associated command(behaves like a suffix alias)
  - abbr-suffix: '.jar'
    prepend: 'java -jar'

  - abbr-suffix: '.cpp'
    replace-all: 'chino -o /tmp/a.out $1 && /tmp/a.out'
    evaluate: true

  - abbr-suffix: '.ts'
    prepend: $([[ -f import_map.json ]] && printf '%s' "deno run --import-map=import_map.json" || printf '%s' "deno run") --allow-all --unstable
    evaluate: true

  - abbr-suffix: '.bat'
    prepend: 'cmd.exe /c'

  - abbr-suffix: '.ps1'
    prepend: 'powershell.exe -NoLogo -NoProfile -ExecutionPolicy Bypass -File'

  # like a function
  - context: 'my-ssh-keygen'
    abbr-regex: '^[^-].*'
    replace-all: 'mkdir -p ~/.ssh/$1 && chmod 700 ~/.ssh/$1 && ssh-keygen -t ed25519 -f ~/.ssh/$1/id_ed25519'
    evaluate: true

  - context: 'mkdircd'
    abbr-prefix: ''
    replace-all: 'mkdir -p $1 && cd $1'
    evaluate: true

  - context: 'trash'
    abbr-prefix: ''
    replace-all: 'mkdir -p /tmp/trash; mv -fv $1 /tmp/trash'
    evaluate: true

  # global abbreviation
  - abbr: '>null'
    replace-self: '>/dev/null 2>&1'
    global: true

  # as one pleases
  - context: 'cd'
    abbr: 'f'
    replace-self: $(fzf-directory)
    evaluate: true
    redraw: true

  - context: 'cd'
    abbr: 'g'
    replace-self: $(fzf-git-repository)
    evaluate: true
    redraw: true

  - context: ''
    abbr-suffix: ':coffee:'
    replace-self: ${1%:coffee:}☕
    global: true
    evaluate: true

