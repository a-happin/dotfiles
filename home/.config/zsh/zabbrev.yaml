abbrevs:
  # normal abbreviation
  - abbr: 'q'
    snippet: 'exit'

  - abbr: 'e'
    snippet: '${EDITOR}'
    evaluate: true

  - abbr: 'd'
    snippet: 'podman'

  - abbr: 'g'
    snippet: 'git'

  - abbr: 'push'
    snippet: 'git push'

  - abbr: 'pushu'
    snippet: 'git push -u origin HEAD'

  - abbr: 'pull'
    snippet: 'git pull'

  - abbr: 'clone'
    snippet: 'git clone --depth 1 --recurse-submodules --shallow-submodules'

  - abbr: 'commit'
    snippet: 'git commit -v'

  - abbr: 'reload'
    snippet: 'exec zsh'

  - abbr: 'relogin'
    snippet: 'exec zsh -l'

  - abbr: 'ls'
    snippet: 'ls -lah'

  - abbr: 'la'
    snippet: 'ls -lah'

  - abbr: 'll'
    snippet: 'ls -lah'

  - abbr: 'note'
    snippet: 'nvim ~/Dropbox/note/note.md -c "cd %:h"'

  - abbr: 'nvimrc'
    snippet: 'nvim "${XDG_CONFIG_HOME}/nvim/init.vim" -c "cd %:h"'

  - abbr: 'zshrc'
    snippet: 'nvim "${XDG_CONFIG_HOME}/zsh/.zshrc"'

  - abbr: 'bashrc'
    snippet: 'nvim ~/.bashrc'

  - abbr: 'fishconfig'
    snippet: 'nvim "${XDG_CONFIG_HOME}/fish/config.fish" -c "cd %:h"'

  - abbr: 'i3config'
    snippet: 'nvim "${XDG_CONFIG_HOME}/i3/config" -c "cd %:h"'

  - abbr: 'gitconfig'
    snippet: 'git config --global -e'

  - abbr: '['
    snippet: '[[ 🐣 ]]'
    cursor: '🐣'

  - abbr: '[['
    snippet: '[[ 🐣 ]]'
    cursor: '🐣'

  # add default options
  - abbr: 'exa'
    snippet: 'exa -lah'

  - abbr: 'cp'
    snippet: 'cp -iv'

  - abbr: 'mv'
    snippet: 'mv -iv'

  - abbr: 'rm'
    snippet: 'rm -iv'

  - abbr: 'rr'
    snippet: 'rmdir'

  - abbr: 'rrf'
    snippet: 'rm -rf'

  - abbr: 'ln'
    snippet: 'ln -snfv FILE LINK'

  - abbr: 'rmlink'
    snippet: 'rm -iv'

  - abbr: 'mkdir'
    snippet: 'mkdir -p'

  - abbr: 'df'
    snippet: 'df -h'

  - abbr: 'du'
    snippet: 'du -h --max-depth 1'

  - abbr: 'fd'
    snippet: 'fd --hidden --no-ignore'

  - abbr: 'rg'
    snippet: "rg --hidden --no-ignore --glob '!.git'"

  - abbr: 'rsync'
    snippet: "rsync -avh --progress --delete --dry-run SRC_DIR/ DEST_DIR # Be careful with '/' at the end."

  - abbr: 'paccache'
    snippet: "paccache -r; paccache -ruk0; yay --aur -Sc"

  - abbr: 'g++'
    snippet: 'g++ -std=c++2b -Wall -Wextra -pedantic-errors -I./include -O2 -pipe'

  - abbr: 'clang++'
    snippet: 'clang++ -std=c++2b -Weverything -Wno-c++98-compat-pedantic -Wno-c11-extensions -pedantic-errors -I./include -O2 -pipe'

  - abbr: 'curl'
    snippet: 'curl -fsSL'

  - abbr: 'date'
    snippet: date +'%Y-%m-%d(%a) %H:%M:%S %Z(%:z)'

  # minecraft gameoutput
  - context: ''
    abbr: 'gameoutput'
    snippet: 'less +F ../../../logs/latest.log'

  # zsh
  - abbr: 'type'
    snippet: 'type -as'

  - abbr: 'historygrep'
    snippet: ' history 0 | grep'

  - abbr: 'historyedit'
    snippet: ' ${EDITOR} ${HISTFILE}'
    evaluate: true

  - abbr: 'h'
    snippet: '$(fc -l -n -r 0 | fzf)'
    evaluate: true

  - abbr: 'he'
    snippet: ' ${EDITOR} ${HISTFILE}'
    evaluate: true

  - abbr: '!!'
    snippet: '$(fc -l -n -1)'
    evaluate: true

  - context: 'sudo'
    abbr: '!!'
    snippet: '$(fc -l -n -1)'
    evaluate: true

  - context: 'zabbrev'
    abbr: 'update'
    snippet: 'cargo uninstall zabbrev; cargo install --path ~/work/zabbrev'
    operation: replace-all

  - context: 'zabbrev'
    abbr: 'config'
    snippet: '${EDITOR} ~/.config/zsh/zabbrev.yaml'
    operation: replace-all
    evaluate: true

  # prepend sudo
  - context: 'pacman'
    abbr-regex: '^-[SRUD]'
    snippet: 'sudo'
    operation: prepend

  - abbr: 'apt'
    snippet: 'sudo'
    operation: prepend

  - abbr: 'docker'
    snippet: 'sudo'
    operation: prepend

  # prepend cd
  - abbr: '..'
    snippet: 'cd'
    operation: prepend

  # typo
  - abbr: ':q'
    snippet: 'exit'

  - abbr: 'vscode'
    snippet: 'code'

  - abbr: 'exho'
    snippet: 'echo'

  # fix options
  - context: 'rm -iv'
    abbr-suffix: ''
    snippet: rm $([[ -d "$1" ]] && printf '%s' '-riv' || printf '%s' '-iv')
    operation: replace-context
    evaluate: true

  - context: 'cp -iv'
    abbr-suffix: ''
    snippet: cp $([[ -d "$1" ]] && printf '%s' '-riv' || printf '%s' '-iv')
    operation: replace-context
    evaluate: true

  # subcommand
  - context: 'git'
    abbr: 'a'
    snippet: 'add --patch'

  - context: 'git'
    abbr: 'aa'
    snippet: 'add -v --all'

  - context: 'git'
    abbr: 'af'
    snippet: "add $(git ls-files --modified --others --exclude-standard | fzf --multi --reverse --preview='git diff --color=always --exit-code -- {} && bat --color=always --style=numbers {}')"
    evaluate: true
    redraw: true

  - context: 'git'
    abbr: 'b'
    snippet: 'branch'

  - context: 'git'
    abbr: 'c'
    snippet: 'commit'

  - context: 'git'
    abbr: 'cm'
    snippet: 'commit -m'

  - context: 'git'
    abbr: 'cv'
    snippet: 'commit -v'

  - context: 'git'
    abbr: 'amend'
    snippet: 'commit --amend'

  - context: 'git'
    abbr: 'touch'
    snippet: 'commit --amend --date=now --no-edit'

  - context: 'git'
    abbr: 'cd'
    snippet: 'cd $(git root 2> /dev/null)'
    operation: replace-all
    evaluate: true

  - context: 'git'
    abbr: 'co'
    snippet: 'checkout'

  - context: 'git'
    abbr: 'clean'
    snippet: 'clean -df'

  - context: 'git'
    abbr: 'd'
    snippet: 'diff'

  - context: 'git'
    abbr: 'dw'
    snippet: diff --color-words='\w+|[^[:space:]]'

  - context: 'git'
    abbr: 'df'
    snippet: 'diff --name-only --relative'

  - context: 'git'
    abbr: 'detach'
    snippet: 'checkout --detach'

  - context: 'git'
    abbr: 'discard'
    snippet: 'reset --hard HEAD'

  - context: 'git'
    abbr: 'discard-local'
    snippet: 'reset --hard @{u}'

  - context: 'git'
    abbr: 'f'
    snippet: 'fetch'

  - context: 'git'
    abbr: 'fp'
    snippet: 'fetch --prune'

  - context: 'git'
    abbr: 'fomm'
    snippet: fetch origin $(local b=$(fzf-git-branch); printf '%s:%s' "$b" "$b")
    evaluate: true
    redraw: true

  - context: 'git'
    abbr: 'fixup'
    snippet: commit --fixup $(fzf-git-commit)
    evaluate: true
    redraw: true

  - context: 'git'
    abbr: 'hash'
    snippet: 'rev-parse HEAD'

  - context: 'git'
    abbr: 'initc'
    snippet: 'commit --allow-empty -m "Initial commit."'

  - context: 'git'
    abbr: 'new'
    snippet: 'switch -c'

  - context: 'git'
    abbr: 'newtag'
    snippet: 'tag -a'

  - context: 'git'
    abbr-suffix: 'pick'
    snippet: cherry-pick $(fzf-git-commit)
    evaluate: true
    redraw: true

  - context: 'git'
    abbr: 'pu'
    snippet: 'push -u origin HEAD'

  - context: 'git'
    abbr: 'pr'
    snippet: 'pull --rebase origin $(git symbolic-ref --short HEAD)'
    evaluate: true

  - context: 'git'
    abbr: 'root'
    snippet: 'rev-parse --show-toplevel'

  - context: 'git'
    abbr: 's'
    snippet: ' git stash list && git status'
    operation: replace-all

  - context: 'git'
    abbr: 'skip'
    snippet: 'update-index --skip-worktree'

  - context: 'git'
    abbr: 'staged'
    snippet: 'diff --cached'

  - context: 'git'
    abbr: 'stashes'
    snippet: 'stash list'

  - context: 'git'
    abbr: 'sw'
    snippet: 'switch $(fzf-git-branch)'
    evaluate: true
    redraw: true

  - context: 'git'
    abbr: 't'
    snippet: 'tree -10'

  - context: 'git'
    abbr: 'tags'
    snippet: 'tag'

  - context: 'git'
    abbr: 'uncommit'
    snippet: 'reset --soft HEAD~'

  - context: 'git'
    abbr: 'unshallow'
    snippet: 'fetch --unshallow'

  - context: 'git'
    abbr: 'unskip'
    snippet: 'update-index --no-skip-worktree'

  - context: 'git'
    abbr: 'unstage'
    snippet: 'reset HEAD --'

  - context: 'git'
    abbr: 'untrack'
    snippet: 'rm --cache --'

  - context: 'git'
    abbr: 'untracked'
    snippet: 'ls-files --others --exclude-standard'

  - context: 'git'
    abbr: 'url'
    snippet: 'config --get remote.origin.url'

  - context: 'git'
    abbr: 'wip'
    snippet: 'commit -m WIP'

  - context: 'git'
    abbr: 'zip'
    snippet: 'archive --worktree-attributes --format=zip HEAD -o "$(basename $(pwd)).zip"'
    evaluate: true

  - context: 'git rebase'
    abbr: '-i'
    snippet: -i $(fzf-git-commit)
    evaluate: true
    redraw: true

  - context: 'git tag -a'
    abbr-prefix: 'v'
    snippet: -m 'version ${1#v}'
    operation: append
    evaluate: true

  - context: 'git subtree add'
    abbr-regex: '^[^-]'
    snippet: '--prefix=$1 $1'
    evaluate: true

  - context: 'git subtree pull'
    abbr-regex: '^[^-]'
    snippet: '--prefix=$1 $1'
    evaluate: true

  - context: 'git subtree push'
    abbr-regex: '^[^-]'
    snippet: '--prefix=$1 $1'
    evaluate: true

  # external command
  - context: 'git'
    abbr: 'destroy'
    snippet: 'rm -rf .git'
    operation: replace-all

  - context: 'git'
    abbr: 'rg'
    snippet: "rg --hidden --glob '!.git'"
    operation: replace-all

  # global abbreviation
  - context: 'git push'
    abbr: '-f'
    snippet: --force-with-lease
    global: true

  - context: 'git'
    abbr: 'B'
    global: true
    snippet: $(fzf-git-branch)
    evaluate: true
    redraw: true

  - context: 'git'
    abbr: 'C'
    global: true
    snippet: $(fzf-git-commit)
    evaluate: true
    redraw: true

  # kill
  - context: 'kill'
    abbr: '-KILL'
    snippet: '-KILL $(fzf-process)'
    evaluate: true
    redraw: true

  # podman
  - context: 'podman'
    abbr: 'run'
    snippet: run --rm -it --userns=keep-id -v container-home:/home/${USER} --passwd-entry='$USERNAME:*:$UID:$GID::/home/$USERNAME:/bin/bash'

  # associated command(behaves like a suffix alias)
  - abbr-suffix: '.cpp'
    snippet: 'chino -o /tmp/a.out $1 && /tmp/a.out'
    operation: replace-all
    evaluate: true

  - abbr-suffix: '.ts'
    snippet: 'deno run --allow-all'
    operation: prepend

  - abbr-suffix: '.jar'
    snippet: 'java -jar'
    operation: prepend

  - abbr-suffix: '.bat'
    snippet: 'cmd.exe /c'
    operation: prepend

  - abbr-suffix: '.ps1'
    snippet: 'powershell.exe -NoLogo -NoProfile -ExecutionPolicy Bypass -File'
    operation: prepend

  # fake command
  - context: 'compile'
    abbr-suffix: '.cpp'
    snippet: 'chino'
    operation: replace-context

  # extract
  - context: 'extract'
    abbr-suffix: '.tar.bz2'
    snippet: 'tar -jxvf'
    operation: replace-context

  - context: 'extract'
    abbr-suffix: '.tar.gz'
    snippet: 'tar -zxvf'
    operation: replace-context

  - context: 'extract'
    abbr-suffix: '.tar.xz'
    snippet: 'tar -Jxvf'
    operation: replace-context

  - context: 'extract'
    abbr-suffix: '.tbz2'
    snippet: 'tar -jxvf'
    operation: replace-context

  - context: 'extract'
    abbr-suffix: '.tgz'
    snippet: 'tar -zxvf'
    operation: replace-context

  - context: 'extract'
    abbr-suffix: '.tar'
    snippet: 'tar -xvf'
    operation: replace-context

  - context: 'extract'
    abbr-suffix: '.bz2'
    snippet: 'bzip2 -dc'
    operation: replace-context

  - context: 'extract'
    abbr-suffix: '.zip'
    snippet: 'unzip'
    operation: replace-context

  - context: 'extract'
    abbr-suffix: '.rar'
    snippet: 'unrar x'
    operation: replace-context

  - context: 'extract'
    abbr-suffix: '.gz'
    snippet: 'gzip -dc'
    operation: replace-context

  - context: 'extract'
    abbr-suffix: '.xz'
    snippet: 'xz -d'
    operation: replace-context

  - context: 'compress'
    abbr-suffix: '.tar.bz2'
    snippet: 'tar -jcvf'
    operation: replace-context

  # compress
  - context: 'compress'
    abbr-suffix: '.tar.gz'
    snippet: 'tar -zcvf'
    operation: replace-context

  - context: 'compress'
    abbr-suffix: '.tar.xz'
    snippet: 'tar -Jcvf'
    operation: replace-context

  - context: 'compress'
    abbr-suffix: '.tbz2'
    snippet: 'tar -jcvf'
    operation: replace-context

  - context: 'compress'
    abbr-suffix: '.tgz'
    snippet: 'tar -zcvf'
    operation: replace-context

  - context: 'compress'
    abbr-suffix: '.tar'
    snippet: 'tar -cvf'
    operation: replace-context

  - context: 'compress'
    abbr-suffix: '.zip'
    snippet: 'zip -r'
    operation: replace-context

  - context: 'compress'
    abbr-suffix: '.rar'
    snippet: 'rar a'
    operation: replace-context

  # like a function
  - context: 'my-ssh-keygen'
    abbr-prefix: ''
    snippet: mkdir -p ~/.ssh/$1 && chmod 700 ~/.ssh/$1 && ssh-keygen -t ed25519 -f ~/.ssh/$1/id_ed25519 -N ''
    operation: replace-all
    evaluate: true

  - context: 'mkdircd'
    abbr-prefix: ''
    snippet: 'mkdir -p $1 && cd $1'
    operation: replace-all
    evaluate: true

  - context: 'trash'
    abbr-prefix: ''
    snippet: 'mkdir -p /tmp/trash; mv -fv $1 /tmp/trash'
    operation: replace-all
    evaluate: true

  # global abbreviation
  - abbr: '>null'
    snippet: '>/dev/null 2>&1'
    global: true

  # as one pleases
  - context: 'cd'
    abbr: 'f'
    snippet: $(fzf-directory)
    evaluate: true
    redraw: true

  - context: 'cd'
    abbr: 'g'
    snippet: $(fzf-git-repository)
    evaluate: true
    redraw: true

  - context: ''
    abbr-suffix: ':coffee:'
    snippet: ${1%:coffee:}☕
    global: true
    evaluate: true

