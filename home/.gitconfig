# vim: set noexpandtab sw=0 :
[user]
	email = 10003601+a@users.noreply.github.com
	name = a_happin
[color]
	ui = auto
[core]
	editor = nvim
[log]
	decorate = short
[pull]
	ff = only
[push]
	default = upstream
[alias]
	a = add -p
	alias = !git config --get-regexp ^alias\\. | sed 's/^alias\\.\\([^ ]*\\) /\\1\\\t => /'
	amend = commit --amend
	autosquash = rebase -i --autosquash
	branchname = symbolic-ref --short HEAD
	branches = !git branch -a | cut -c 3-
	commitv = commit -v
	d = diff
	delete-current-branch = !git detach && git branch -d @{-1} && :
	delete-merged-branch = !git merged | xargs git branch -d
	detach = checkout --detach
	diff-filename = diff --name-only
	diff-words = diff --color-words='\\w+|[^[:space:]]'
	discard-local-changes = reset --hard @{u}
	e = config --global -e
	f = "!_() { set \"$@\" $(git master) ; set -x; git fetch origin ${1}:${1}; }; _"
	feature = "!_() { [[ -n $1 ]] && git switch -c feature/$1 ; }; _"
	fixup = commit --fixup HEAD
	fetch-prune = fetch --prune
	fzf = "!_() { local branch; branch=$(git branches | fzf --reverse -0 --height '10%') && git switch $branch ; }; _"
	git = !git
	hash = rev-parse HEAD
	i = rebase -i
	ignore = "!_() { for i in \"$@\" ; do echo \"$i\" >> \"${GIT_PREFIX}.gitignore\"; done; }; _"
	initial-commit = commit --allow-empty -m \"Initial commit.\"
	master = !git config init.defaultBranch || echo master
	merged = !git branch --merged | grep -Ev '\\*|master|develop|release|gh-pages' | tr -d '^ '
	new = switch -c
	p = pull --rebase origin develop
	progress = !git log --branches --since=midnight --date=iso --author=\"$(git config user.name)\"
	progress1 = progress --pretty=format:%s
	pushf = push --force-with-lease
	pushu = push -u origin HEAD
	reset-to-head = reset --hard HEAD
	reset-to-remote = reset --hard @{u}
	s = !git stash list && git status && git log -1
	skip = update-index --skip-worktree
	staged = diff --cached
	stashes = stash list
	t = tree -10
	tags = tag
	touch = commit --amend --no-edit --date=now
	tree = log --graph --all --pretty=format:'%x09%C(auto)%h%d%C(reset) %C(cyan)-%C(reset) %s %C(blue)by %an%C(reset), %C(green)%ar%C(reset)'
	uncommit = reset --soft HEAD~
	unskip = update-index --no-skip-worktree
	unstage = reset HEAD --
	untrack = rm --cache --
	untracked = ls-files --others --exclude-standard
	wip = commit -m \"WIP: \" --edit
	zip = !git archive --worktree-attributes --format=zip HEAD -o $(basename `pwd`).zip

